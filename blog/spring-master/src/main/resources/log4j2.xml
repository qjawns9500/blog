<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
	<!-- Appender: 로그를 어디에 출력할지 정의한다-->
	<Appenders>
		<!-- console: 콘솔에 로그를 출력하기 위한 설정을 지정하는 요소   -->
		<Console name="console" target="SYSTEM_OUT">
			<!--PatternLayout: 로그의 출력 형식을 지정한다.-->
			<PatternLayout pattern="%d{HH:mm:ss a}%5p (%C{2} - %L) - %msg%n" />
		</Console>

		<!--RollingFile :RollingFileAppender는 파일에 로그 기록하고, 일정 크기 또는 주기에 따라 파일을 롤링(순환) -->
		<RollingFile name="RollingFile">
			<!-- FileName: 로그를 저장할 파일의 경로 및 이름을 지정한다. -->
			<FileName>C:/Users/jdh/IdeaProjects/logs.log</FileName>
			<!-- FilePattern: "롤링"된 로그파일의 이름 패턴을 지정하는 태그이다. -->
			<FilePattern>C:/Users/jdh/IdeaProjects/%d{yyyy-MM-dd}.log.zip</FilePattern>

			<!--patterLayout 로그 메시지 출력 형식을 지정하는 태그이다. -->
			<PatternLayout>
				<Pattern>%d{yyyy-MMM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n</Pattern>
			</PatternLayout>

			<!-- Plicies: 롤링되는 파일의 정책을 설정한다. -->
			<Policies>
				<!--TimeBasedTriggeringPolicy: 시간 기반으로 롤링되도록 설정되어있다. interval: 롤링간격(2일) -->
				<!--modulate="true" : 롤링 주기를 정확히 interval에 지정된 시간 간격으로 유지. -->
				<TimeBasedTriggeringPolicy interval="2" modulate="true" />
			</Policies>
			<!-- DefaultRolloverStrategy: 롤링되는 파일의 최대 개수  / max속성 사용해 5개가 최대 -->
			<DefaultRolloverStrategy max="5" />
		</RollingFile>

		<!-- Error RollingFileAppender 정의  -->
		<RollingFile name="ErrorFile">
			<!-- 로그파일 경로,이름 지정 -->
			<FileName>C:/Users/jdh/IdeaProjects/err_logs.log</FileName>
			<!-- 롤링된 로그파일 이름 패턴 지정 -->
			<FilePattern>C:/Users/jdh/IdeaProjects/%d{yyyy-MM-dd}.err_log.zip</FilePattern>

			<!-- 로그메시지 출력형식 지정-->
			<PatternLayout>
				<Pattern>%d{yyyy-MMM-dd HH:mm:ss} [%t] %-5level %C - %msg%n</Pattern>
			</PatternLayout>
			<!--  롤링파일 정책 설정 -->
			<Policies>
				<TimeBasedTriggeringPolicy interval="2" modulate="true" />
			</Policies>
			<DefaultRolloverStrategy max="5" />
		</RollingFile>
		
	</Appenders>

	<!-- Logger 설정 -->
	<!--  로거 설정 시작 -->
	<Loggers>
		<!-- Root level = info : Root로거를 정의 (루트 로거는 모든 로그 이벤트 처리하는 최상위 로거) 로그레벨 Info 이상의 로그만 출력   -->
		<Root level="info">

			<!-- 콘솔과 롤링파일, 두개의 Appender에 로그 이벤트 전달한다. -->
			<AppenderRef ref="RollingFile" />
			<AppenderRef ref="console" />
		</Root>

		<!-- com.zaxxer.hikari패키지에 속하는 클래스들의 로깅 설정한다. (name속성에 지정된 패키지에 속하는 클래스들의 로깅설정 -->
		<!-- additivity="false: 이 로거에만 정의된 Appender에만 로그를 전달합니다. -->
		<logger name="com.zaxxer.hikari" level="info" additivity="false">

			<!-- 콘솔과 롤링파일, 두개의 Appender에 로그 이벤트 전달한다. -->
			<appender-ref ref="RollingFile" />
			<appender-ref ref="console"/>
		</logger>

		<!-- ExceptionController 클래스의 로깅을 설정합니다 -->
		<!-- additivity="false: 이 로거에만 정의된 Appender에만 로그를 전달합니다. -->
		<logger name="ExceptionController" level="error" additivity="false">

			<!-- 콘솔과 에러파일, 두개의 Appender에 로그 이벤트 전달한다. -->
			<appender-ref ref="console"/>
			<appender-ref ref="ErrorFile" />
		</logger>

		<!--log4jdbc.log4j2 패키지에 속하는 클래스들의 로깅을 설정한다, -->
		<!-- additivity="false: 이 로거에만 정의된 Appender에만 로그를 전달합니다. -->
		<logger name="log4jdbc.log4j2" level="info" additivity="false">

		<!--MarkerFilter:LOG4JDBC_JDBC마커가 있는 로그 이벤트를 거부하고 마커가없는 로그들은 추가처리X(해당패키지에 관한 로그 기록x) -->
			<MarkerFilter marker="LOG4JDBC_JDBC" onMatch="DENY" onMismatch="NEUTRAL"/>

			<!-- 콘솔과 롤링파일, 두개의 Appender에 로그 이벤트 전달한다. -->
			<appender-ref ref="RollingFile" />
			<appender-ref ref="console" />
		</logger>
	</Loggers>
</Configuration>
	
