<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<!-- 설정에서 각 매퍼에 설정된 캐시를 전역적으로 사용할지 말지에 대한 여부. 기본값 true -->
		<setting name="cacheEnabled" value="true" />
		
		<!-- 지연로딩을 사용할지에 대한 여부. 기본값 false -->
		<setting name="lazyLoadingEnabled" value="false" />
		
		<!-- 한개의 구문에서 여러개의 ResultSet을 허용할지의 여부. 기본값 true -->
		<setting name="multipleResultSetsEnabled" value="true" />
		
		<!-- 칼럼명 대신에 칼럼라벨을 사용.기본값 true -->
		<setting name="useColumnLabel" value="true" />
		
		<!-- 생성키에 대한 JDBC 지원을 허용. 기본값 false -->
		<setting name="useGeneratedKeys" value="false" />
		
		<!-- 디폴트 실행자(executor) 설정. 기본값 SIMPLE. SIMPLE = 아무것도x REUSE = PreparedStatement 재사용, BATCH = 구문재사용, 수정을 배치처리 -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		
		<!-- 데이터베이스로의 응답을 얼마나 오래 기다릴지를 판단하는 타임아웃을 설정 기본값 x -->
		<setting name="defaultStatementTimeout" value="60000" />
		
		<!-- 중첩구문내 RowBound사용을 허용 허용한다면 false로 설정. 기본값 fasle. RowBound 페이징 관련 class -->
		<setting name="safeRowBoundsEnabled" value="false" />
		
		<!-- CamelCase형태의 자바 프로퍼티명 형태로 자동으로 매핑. 기본값 false A_COLUMN -> aColumn -->
		<setting name="mapUnderscoreToCamelCase" value="true" />
		
		<!--SESSION = 사용해서 동일 세션의 모든 쿼리를 캐시한다, STATEMENT 로 설정하면 로컬 세션은 구문 실행할때만 사용하고 같은 SqlSession에서 두개의 다른 호출사이에는 데이터를 공유하지 않는다.-->
		<setting name="localCacheScope" value="SESSION" /> 
		
		<!-- JDBC타입을 파라미터에 제공하지 않을때 null값을 처리한 JDBC타입을 명시한다. 기본값 OTHER -->
		<setting name="jdbcTypeForNull" value="VARCHAR" />
		
		<!-- 지연로딩을 야기하는 객체의 메소드를 명시. 기본값  equals,clone,hashCode,toString -->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
	</settings>
</configuration>